name: Deploy to VPS

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Develop
        if: ${{ github.ref_name == 'develop' }}
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/project/RentalCoreAPI
            git pull origin develop

            # cp .env.dev .env # Copy the development environment file
            # echo "Contents of .env after copying:"
            # cat .env # Print the .env file contents

            echo "${{ secrets.ENV_DEV }}" > .env.dev
            echo "Contents of .env.dev (develop):"
            cat .env.dev

            docker-compose down # Shutdown the running containers
            docker-compose build --build-arg ENV_FILE=.env.dev
            docker-compose up -d # Restart the containers in detached mode

            # Check if Docker container is running on port 5432
            sudo lsof -i :5432 || echo "No service is using port 5432"

      - name: Deploy to Production
        if: ${{ github.ref_name == 'main' }}
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_PROD_HOST }}
          username: ${{ secrets.SERVER_PROD_USER }}
          key: ${{ secrets.SSH_PROD_PRIVATE_KEY }}
          script: |
            cd ~/../home/pakee/backend/RentalCoreAPI/
            git pull origin main

            # cp .env.prod .env # Copy the production environment file
            # echo "Contents of .env after copying:"
            # cat .env # Print the .env file contents
            # echo "Host value: ${{ secrets.SERVER_PROD_HOST }}"

            echo "${{ secrets.ENV_DEV }}" > .env.prod
            echo "Contents of .env.prod (production):"
            cat .env.prod
            
            docker-compose down # Shutdown the running containers
            docker-compose build --build-arg ENV_FILE=.env.prod # Build with the appropriate .env file
            docker-compose up -d # Restart the containers in detached mode

            # Check if Docker container is running on port 5432
            sudo lsof -i :5432 || echo "No service is using port 5432"

